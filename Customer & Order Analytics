#In the below SQL, I'm querying a database containing customer and order information, in order to quantify statistics about customers and orders.

#1. How any orders were placed in January?
SELECT count(orderID) FROM BIT_DB.JanSales
WHERE length(orderID) = 6 AND orderID <> 'Order ID';

#2. How any of these orders were for an iPhone?
SELECT count(orderID) FROM BIT_DB.JanSales
WHERE Product = 'iPhone' AND length(orderID) = 6 AND orderID <> 'OrderID';

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum
FROM BIT_DB.FebSales f
INNER JOIN BIT_DB.customers c
ON f.orderID = c.order_id
WHERE length(c.order_id) = 6 AND c.order_id <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT min(price), Product FROM BIT_DB.JanSales
GROUP BY price, Product
ORDER BY price asc LIMIT 1;

#5. What is the total revenue for each product sold in January?
SELECT sum(quantity)*price as revenue, Product
FROM BIT_DB.JanSales
GROUP BY Product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, sum(Quantity), sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location LIKE '%548 Lincoln St, Seattle, WA 98101%'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(distinct cust.acctnum), avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid=cust.order_id
WHERE Feb.quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID';
