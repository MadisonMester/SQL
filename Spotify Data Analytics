# For this SQL project, I downloaded Spotify data from Kaggle to create a table. After inputting the data, I used SQL queries to answer questions and analyze the data.

#First I created the table.
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

#Second, I imported the Spotify .csv file into the Spotifydata table.

#Below are the questions I asked, and the SQL I used to determine the results.

#Which five artists have the highest average danceability?
SELECT artist_name, avg(danceability) as avg_danceability
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_danceability desc
LIMIT 5;

#Which songs are faster than the average tempo?
SELECT artist_name, track_name, tempo
FROM BIT_DB.Spotifydata
WHERE tempo >(SELECT avg(tempo) FROM BIT_DB.Spotifydata)
ORDER BY tempo desc;

#Which track is the shortest, and who is its artist?
SELECT artist_name, track_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms asc
LIMIT 1;
